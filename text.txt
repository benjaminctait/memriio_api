app.post('/set_memory_clouds',(req,res) =>{

    const {memoryid,clouds} = req.body
    console.log('set_memory_clouds req with body :' + memoryid + ' : ' + clouds) 
    
    db.transaction(trx =>{
        trx('memgroups').where('memid',memoryid).del().returning('memid')                 
        .then(response =>{
            console.log('set_memory_clouds : delete memgroups for memory : ' + memoryid);
            {
                clouds.map(cloud =>{
                    console.log('set_memory_clouds : insert into memgroups memid,cloud.id : ' + memoryid + ', ' + cloud.id);
                    return trx.insert({memid:memoryid,groupid:cloud.id}).into('memgroups').returning('memid')
                })
            }
        })
        .then(trx.commit)
        .then(()=>{
            res.json({
                success:true,
                data:null,
                error:null
                })
            })
        .catch(trx.rollback).then(err =>{
            res.json({
                success:false,
                data:null,
                error:err
             })
    })
    })
})

addarray = []
    console.log('set_memory_tagged_people req with body :' + memoryid + ' : ' + JSON.stringify(taggedPeople,null,2)) 
    
    db.transaction(trx =>{
        trx('mempeople').where('memid',memoryid).del().returning('memid')                 
        .then(() =>{
                taggedPeople.map(person =>{                    
                    addarray.push(
                        {
                            'memid' : memoryid,
                            'userid': person.userid
                        }
                    )
                })                
                return trx('mempeople').insert(addarray)          
        })
        .then(trx.commit)
        .then(()=>{
            console.log(`memory people update memid : ${memoryid} add people ${taggedPeople.map(person=>{return person.userid} )} : success`);
            res.json({
                success:true,
                data:null,
                error:null
                })
            })
        .catch(trx.rollback).then(err =>{
            res.json({
                success:false,
                data:null,
                error:err
                })
    })
})